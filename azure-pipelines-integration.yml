pool:
  vmImage: 'windows-2019'

trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - /doc/**/*

pr:
  branches:
    include:
      - master
  paths:
    exclude:
      - README.md
      - /doc/**/*

variables:
  - group: 'External Resources'

steps:

- task: gittools.gitversion.gitversion-task.GitVersion@4
  displayName: GitVersion
  inputs:
    preferBundledVersion: false

# init SonarCloud
- task: SonarSource.sonarcloud.14d9cde6-c1da-4d55-aa01-2965cd301255.SonarCloudPrepare@1
  displayName: 'Prepare analysis on SonarCloud'
  inputs:
    SonarCloud: SonarCloud
    organization: aloneguid-github
    projectKey: aloneguid_storage
    projectName: 'Storage.Net'
    extraProperties: 'sonar.cs.opencover.reportsPaths=$(Build.StagingDirectory)/coverage.xml'

- task: DotNetCoreCLI@2
  displayName: 'Integration and Unit Test (with coverlet)'
  continueOnError: true
  inputs:
    command: test
    projects: ./src/storage.sln
    arguments: '/p:CollectCoverage=true /p:CoverletOutputFormat=opencover /p:Exclude="[xunit*]*%2c[*Test*]*" /p:CoverletOutput=$(Build.StagingDirectory)/coverage.xml'

#- powershell: 'cat $(Build.StagingDirectory)/coverage.xml'
#  errorActionPreference: silentlyContinue
#  displayName: 'cat coverage.xml'

#SQ requires building the whole solution, specifically from .sln file, otherwise everything fails miserably
- task: DotNetCoreCLI@2
  displayName: 'Build Solution'
  inputs:
    projects: src/storage.sln

# finish Sonar analysis
- task: SonarSource.sonarcloud.ce096e50-6155-4de8-8800-4221aaeed4a1.SonarCloudAnalyze@1
  displayName: 'SonarQube: Run Code Analysis'
- task: SonarSource.sonarcloud.38b27399-a642-40af-bb7d-9971f69712e8.SonarCloudPublish@1
  displayName: 'SonarQube: Publish Quality Gate Result'
